name: prompt
description: 사용자가 새로운 프롬프트 템플릿을 생성하고 싶을 때 사용할 수 있는 프롬프트로, 새로운 프롬프트 템플릿 파일 생성을 도와줍니다
arguments:
  - name: format
    description: "출력할 템플릿 형식 (yaml, json, markdown 중 선택, 기본값: markdown)"
    required: true
messages:
  - role: user
    content:
      type: text
      text: |
        새로운 프롬프트 템플릿을 생성해드리겠습니다.
        
        먼저 다음 정보를 알려주세요:
        
        1. **프롬프트 이름**: 생성할 프롬프트의 이름을 영문 소문자와 언더스코어(_)만 사용해서 입력해주세요 (예: code_review, api_documentation)
        
        2. **작업 유형**: 이 프롬프트가 어떤 작업에 사용될지 알려주세요 (예: 코드 리뷰, API 문서화, 테스트 작성 등)
        
        3. **프롬프트 설명**: 이 프롬프트의 목적과 기능을 한국어로 자세히 설명해주세요
        
        위 정보를 모두 알려주시면, 해당 내용으로 프롬프트 템플릿을 생성해드리겠습니다.
        
        {{#if format}}
        **출력 형식**: {{format}} 형식으로 템플릿을 생성해주세요.
        {{else}}
        **출력 형식**: Markdown 형식으로 템플릿을 생성해주세요.
        {{/if}}
        
        {{#if format}}
          {{#in format '["yaml", "yml", "YAML", "YML"]'}}
            ## YAML 템플릿 구조 가이드라인
            
            다음 구조를 정확히 따라 YAML 파일을 생성해주세요:
            
            ### 매개변수가 없는 경우
            ```yaml
            name: name
            description: 프롬프트 기능에 대한 한국어 설명
            arguments: []
            messages:
              - role: user
                content:
                  type: text
                  text: |
                    프롬프트 내용...
            ```
            
            ### 매개변수가 있는 경우
            ```yaml
            name: name
            description: 프롬프트 기능에 대한 한국어 설명
            arguments:
              - name: arg_name
                description: 매개변수에 대한 한국어 설명
                required: true
              - name: optional_arg
                description: 선택적 매개변수 설명
                required: false
            messages:
              - role: user
                content:
                  type: text
                  text: |
                    프롬프트 내용...
                    매개변수 사용: {​{arg_name}​}
                    조건부 사용: {​{#if optional_arg}​}내용{​{else}​}대안{​{/if}​}
            ```
          {{/in}}

          {{#in format '["json", "json5", "JSON", "JSON5"]'}}

            ## JSON 템플릿 구조 가이드라인
            
            다음 구조를 정확히 따라 JSON 파일을 생성해주세요:
            
            ### 매개변수가 없는 경우
            ```json
            {
              "name": "name",
              "description": "프롬프트 기능에 대한 한국어 설명",
              "arguments": [],
              "messages": [
                {
                  "role": "user",
                  "content": {
                    "type": "text",
                    "text": "프롬프트 내용..."
                  }
                }
              ]
            }
            ```
            
            ### 매개변수가 있는 경우
            ```json
            {
              "name": "name",
              "description": "프롬프트 기능에 대한 한국어 설명",
              "arguments": [
                {
                  "name": "arg_name",
                  "description": "매개변수에 대한 한국어 설명",
                  "required": true
                },
                {
                  "name": "optional_arg",
                  "description": "선택적 매개변수 설명",
                  "required": false
                }
              ],
              "messages": [
                {
                  "role": "user",
                  "content": {
                    "type": "text",
                    "text": "프롬프트 내용...\n매개변수 사용: {​{arg_name}​}\n조건부 사용: {​{#if optional_arg}​}내용{​{else}​}대안{​{/if}​}"
                  }
                }
              ]
            }
            ```
          {{/in}}

          {{#in format '["markdown", "md", "MARKDOWN", "MD"]'}}

            ## Markdown 템플릿 가이드라인
            
            Markdown 형식은 간단하고 직관적입니다:
            - **name**: 파일명 (확장자 제외)
            - **description**: 첫 번째 문장을 자동 추출
            - **arguments**: 항상 없음 (매개변수 지원 안함)
            - **messages**: 전체 내용이 user role의 단일 메시지로 변환
            
            ### Markdown 템플릿 예시
            ```markdown
            # 프롬프트 제목
            
            이것은 프롬프트의 설명입니다.
            
            ## 주요 기능
            - 기능 1
            - 기능 2
            
            ### 사용 방법
            1. 단계 1
            2. 단계 2
            
            프롬프트의 상세 내용을 여기에 작성합니다.
            ```
          {{/in}}
        {{else}}
          ## Markdown 템플릿 가이드라인 (기본값)
          
          Markdown 형식은 간단하고 직관적입니다:
          - **name**: 파일명 (확장자 제외)
          - **description**: 첫 번째 문장을 자동 추출
          - **arguments**: 항상 없음 (매개변수 지원 안함)
          - **messages**: 전체 내용이 user role의 단일 메시지로 변환
          
          ### Markdown 템플릿 예시
          ```markdown
          # 프롬프트 제목
          
          이것은 프롬프트의 설명입니다.
          
          ## 주요 기능
          - 기능 1
          - 기능 2
          
          ### 사용 방법
          1. 단계 1
          2. 단계 2
          
          프롬프트의 상세 내용을 여기에 작성합니다.
          ```
        {{/if}}
        
        ## 공통 필드 규칙
        
        ### name (필수)
        - 영문 소문자와 언더스코어(_)만 사용
        - 고유한 식별자여야 함
        - 예: `code_review`, `api_documentation`, `build_mcp_server`
        
        ### description (필수)
        - 한국어로 작성
        - 프롬프트의 목적과 기능을 명확히 설명
        - "사용자가 ~할 때 사용할 수 있는 프롬프트로, ~를 도와줍니다" 형식 권장
        
        ### arguments (YAML/JSON만 해당)
        - 매개변수가 없으면: `arguments: []`
        - 매개변수가 있으면 배열로 정의:
          - `name`: 영문 소문자와 언더스코어만 사용
          - `description`: 한국어로 매개변수 설명
          - `required`: true 또는 false (boolean 값)
        
        ### messages (YAML/JSON만 해당)
        - 항상 배열 형태
        - 일반적으로 하나의 user 메시지만 포함
        
        
        ## 매개변수 플레이스홀더 사용법 (YAML/JSON만 해당)
        - 매개변수는 `{​{parameter_name}​}` 형식으로 텍스트 내에서 참조
        - 조건부 표시: `{​{#if parameter_name}​}내용{​{/if}​}`
        - 조건부 대안: `{​{#if parameter_name}​}내용{​{else}​}대안내용{​{/if}​}`
        
        
        
        ## 요구사항
        다음을 모두 제공해주세요:
        {{#if format}}
          {{#in format '["markdown", "md", "MARKDOWN", "MD"]'}}
            1. **완전한 Markdown 형식 템플릿 파일 내용**
            2. **해당 템플릿 사용 예제**
            3. **파일명 제안** (`src/prompts/{​{name}​}.md` 형식)
          {{/in}}
          {{#in format '["yaml", "yml", "YAML", "YML"]'}}
            1. **완전한 {{format}} 형식 템플릿 파일 내용** (위 구조를 정확히 따름)
            2. **템플릿에 필요한 매개변수 목록과 설명**
            3. **적절한 매개변수 플레이스홀더를 포함한 템플릿 메시지 내용**
            4. **해당 템플릿 사용 예제**
            5. **파일명 제안** (`src/prompts/{​{name}​}.yaml` 형식)
          {{/in}}

          {{#in format '["json", "json5", "JSON", "JSON5"]'}}

            1. **완전한 {{format}} 형식 템플릿 파일 내용** (위 구조를 정확히 따름)
            2. **템플릿에 필요한 매개변수 목록과 설명**
            3. **적절한 매개변수 플레이스홀더를 포함한 템플릿 메시지 내용**
            4. **해당 템플릿 사용 예제**
            5. **파일명 제안** (`src/prompts/{​{name}​}.json` 형식)
          {{/in}}

        {{/if}}
        99. (템플릿 생성 후) 결과를 클립보드에 복사: `echo "결과" | pbcopy`
        
        
        템플릿 설계가 모범 사례를 따르고 AI가 지정된 작업을 효과적으로 완료할 수 있도록 명확한 지침을 제공하는지 확인해주세요.
        
        **중요 사항:**
        - 메시지를 출력할 때 마크다운 문서가 있다면, 온전한 마크다운의 형식으로 결과를 출력해 주세요
        - 생성할 프롬프트가 인자를 받을 것인지, 받지 않을 것인지 유저에게 물어봐야 합니다 (Markdown 형식 제외)
        - {{format}} 형태의 올바른 파일인지 검증한 후, 유저에게 결과를 알려주세요
